 3 Steps to Get Your Agent Reading Uploaded PDFs:
Step 1: Basic File Reading
javascript// This reads any file you upload to the conversation
async function readUploadedFile(filename) {
    try {
        const content = await window.fs.readFile(filename, { encoding: 'utf8' });
        console.log(`✅ Read ${filename}: ${content.length} characters`);
        return content;
    } catch (error) {
        console.log(`❌ Could not read ${filename}: ${error.message}`);
        return null;
    }
}
Step 2: Extract Building Code Clauses
javascriptfunction findClause(text, clauseNumber) {
    // Handle both "D1 3.3" and "D1.3.3" formats
    const normalized = clauseNumber.replace(/\s+/g, '.');
    
    // Look for the clause in the text
    const pattern = new RegExp(`${normalized}[^\\n]*([\\s\\S]*?)(?=\\n[A-Z]\\d+|$)`, 'i');
    const match = text.match(pattern);
    
    if (match) {
        return {
            clauseNumber: normalized,
            content: match[0].trim(),
            found: true
        };
    }
    
    return { clauseNumber: normalized, found: false };
}
Step 3: Answer Questions
javascriptasync function answerBuildingCodeQuestion(question, uploadedFiles) {
    // Check for specific clause request
    const clauseMatch = question.match(/([A-Z]\d+(?:\s+\d+(?:\.\d+)*)?)/i);
    
    if (clauseMatch) {
        const clauseNumber = clauseMatch[1];
        
        // Search through uploaded files
        for (const filename of uploadedFiles) {
            const content = await readUploadedFile(filename);
            if (content) {
                const result = findClause(content, clauseNumber);
                if (result.found) {
                    return `**${result.clauseNumber}**\n\n${result.content}\n\n*Source: ${filename}*`;
                }
            }
        }
        
        return `Clause ${clauseNumber} not found in uploaded files.`;
    }
    
    // Handle general questions...
    return "Please specify a clause number (e.g., D1 3.3) for precise answers.";
}